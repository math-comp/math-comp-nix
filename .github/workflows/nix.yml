name: Cachix
on:
  pull_request:
    branches:
      - master
      - v2
jobs:
  cachix:
    name: Cachix branch
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        mc: [ "1.12.0", "1.11.0", "1.10.0", "1.9.0", "1.8.0" ]
        coq: [ "8.13", "8.12", "8.11", "8.10", "8.9", "8.8", "8.7" ]
        exclude:
          - mc: "1.8.0"
            coq: "8.10"
          - mc: "1.8.0"
            coq: "8.11"
          - mc: "1.8.0"
            coq: "8.12"
          - mc: "1.8.0"
            coq: "8.13"

          - mc: "1.9.0"
            coq: "8.11"
          - mc: "1.9.0"
            coq: "8.12"
          - mc: "1.9.0"
            coq: "8.13"

          - mc: "1.10.0"
            coq: "8.12"
          - mc: "1.10.0"
            coq: "8.13"

          - mc: "1.11.0"
            coq: "8.13"

          - mc: "1.12.0"
            coq: "8.7"
          - mc: "1.12.0"
            coq: "8.8"
          - mc: "1.12.0"
            coq: "8.9"
    outputs:
      nixenv:
        description: "Nix Environement"
        value: ${{ steps.nixenv.outputs.coq-${{ matrix.coq }}-mathcomp-${{ matrix.mc }} }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2.1.1
      - uses: cachix/install-nix-action@v12
      - uses: cachix/cachix-action@v8
        with:
          # Name of a cachix cache to push and pull/substitute
          name:  math-comp
          extraPullNames: coq
          # Authentication token for Cachix, needed only for private cache access
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      # building fake mathcomp-fast target
      - id: nixenv
        run: >
          nix-build --arg override '{coq = "${{ matrix.coq }}"; mathcomp = "${{ matrix.mc }}";}'

          nixenv=$(nix-shell
          --arg override '{coq = "${{ matrix.coq }}"; mathcomp = "${{ matrix.mc }}";}'
          --run printNixEnv)

          echo ::set-output name=coq-${{ matrix.coq }}-mathcomp-${{ matrix.mc }}::$nixenv
      # - id: nixenv
      #   run: |
      #     # echo ::set-env name=coq-${{ matrix.coq }}-mathcomp-${{ matrix.mc }}::$(printNixEnv)
      #      echo ::set-env name=result::$(printNixEnv)
      # - uses: mshick/add-pr-comment@v1
      #   with:
      #     repo-token: ${{ secrets.GITHUB_TOKEN }}
      #     message: |
      #       **coq-${{ matrix.coq }}-mathcomp-${{ matrix.mc }}**
      #       ${{ toJSON(steps.nixenv.outputs) }} }}


  summary:
    name: Summary
    runs-on: ubuntu-latest
    needs: cachix
    steps:
      - uses: mshick/add-pr-comment@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          message: |
            ${{ toJSON(needs.cachix.outputs) }}
