name: Cachix
on:
  pull_request:
    branches:
      - master
      - v2
jobs:
  setup:
    name: Computing matrix of tested versions
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2.1.1
      - uses: cachix/install-nix-action@v12
        with:
          nix_path: nixpkgs=channel:nixpkgs-unstable
      - name: Setup build matrix
        id: set-matrix
        run: "echo ::set-output name=matrix::$(./ci-matrix.sh)"

  builds:
    name: Build mathcomp and coq combination
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.setup.outputs.matrix)}}
    steps:
      - name: Checkout
        uses: actions/checkout@v2.1.1
      - uses: cachix/install-nix-action@v12
        with:
          nix_path: nixpkgs=channel:nixpkgs-unstable
      - uses: cachix/cachix-action@v8
        with:
          # Name of a cachix cache to push and pull/substitute
          name:  math-comp
          extraPullNames: coq
          # Authentication token for Cachix, needed only for private cache access
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Import Nix Store
        if: steps.cache-nix.outputs.cache-hit
        run: nix-store --import < nix-store.nar
      - name: Building mathcomp-full-shell target
        run: |
          overrides="{coq = \"${{ matrix.coq }}\"; mathcomp = \"${{ matrix.mc }}\";}"
          storepath=$(nix eval "(\"\${import ./. {override = $overrides;}}\")")
          hash=$(echo $storepath | sed "s/\"//mg" | xargs basename | cut -d- -f1)
          url=https://math-comp.cachix.org/$hash.narinfo
          if curl --output /dev/null --silent --head --fail "$url"; then
            echo "In cache: $url, doing nothing"
          else
            echo "Not in cache, compiling"
            nix-build --arg override "$overrides"
          fi

  summary:
    name: Generate summary
    runs-on: ubuntu-latest
    needs: builds
    steps:
      - name: Checkout
        uses: actions/checkout@v2.1.1
      - uses: cachix/install-nix-action@v12
        with:
          nix_path: nixpkgs=channel:nixpkgs-unstable
      - uses: cachix/cachix-action@v8
        with:
          # Name of a cachix cache to push and pull/substitute
          name:  math-comp
          extraPullNames: coq
          # Authentication token for Cachix, needed only for private cache access
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      ## does not work because the PR is updated only once
      - name: Cache Nix Store
        uses: actions/cache@v2.1.4
        id: cache-nix
        with:
          path: nix-store.nar
          key: nix-${{ runner.os }}-3-${{ github.sha }}
          restore-keys: |
            nix-${{ runner.os }}-3-
      - name: Update README.md
        id: set-nixenv
        run: |
          ./update-readme.sh
          content=$(cat README.md)
          content="${content//'%'/'%25'}"
          content="${content//$'\n'/'%0A'}"
          content="${content//$'\r'/'%0D'}"
          echo ::set-output name=result::$content
      - name: Compute Closure
        run: nix path-info --all | tee closure.txt
      - name: Export Nix Store
        run: xargs --arg-file=closure.txt nix-store --export > nix-store.nar
      - uses: tzkhan/pr-update-action@v2
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
          head-branch-regex: 'log-.*'
          body-template: |
            ${{ steps.set-nixenv.outputs.result }}
          body-update-action: 'replace'
          body-uppercase-base-match: false
